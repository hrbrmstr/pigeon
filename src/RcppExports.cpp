// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// int_pgn_count
double int_pgn_count(std::string path);
RcppExport SEXP _pigeon_int_pgn_count(SEXP pathSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    rcpp_result_gen = Rcpp::wrap(int_pgn_count(path));
    return rcpp_result_gen;
END_RCPP
}
// int_pgn_recs
List int_pgn_recs(std::string path, NumericVector v, bool display_progress);
RcppExport SEXP _pigeon_int_pgn_recs(SEXP pathSEXP, SEXP vSEXP, SEXP display_progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< bool >::type display_progress(display_progressSEXP);
    rcpp_result_gen = Rcpp::wrap(int_pgn_recs(path, v, display_progress));
    return rcpp_result_gen;
END_RCPP
}
// int_pgn_iter
void int_pgn_iter(std::string path, Function f);
RcppExport SEXP _pigeon_int_pgn_iter(SEXP pathSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< Function >::type f(fSEXP);
    int_pgn_iter(path, f);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pigeon_int_pgn_count", (DL_FUNC) &_pigeon_int_pgn_count, 1},
    {"_pigeon_int_pgn_recs", (DL_FUNC) &_pigeon_int_pgn_recs, 3},
    {"_pigeon_int_pgn_iter", (DL_FUNC) &_pigeon_int_pgn_iter, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_pigeon(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
